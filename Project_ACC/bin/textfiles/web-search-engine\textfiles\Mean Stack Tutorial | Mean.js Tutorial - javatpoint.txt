https://www.javatpoint.com/mean-stack::mean stack tutorial | mean.js tutorial - javatpoint ⇧ scroll to top home mean stack angularjs node.js express.js jquery html css javascript bootstrap php sql quiz projects interview q comment forum mean stack tutorial mean stack tutorial architecture of mean stack setup components of mean stack exploring the project structure angular front-end adding new component creating user interface and fetching data installing angular material creating toolbar using means stack creating expansion panel using structural directives using property and event binding creating a model using forms service in mean stack life cycle hooks adding node & express ways of connecting node adding node backend adding express framework adding error handling in server.js fetching data from node backend using angular http client cors in mean stack adding the post backend point connecting angular to the api endpoint working with mongodb what is mongodb setup mongodb adding mongoose connecting node express app to mongodb storing data into database fetching data from the database transforming the response data deleting documents from the database adding a post with an id add routing styling links client-side v/s server-side routing edit data into the database update data on the server grouping backend routes adding loading spinner image upload adding the file input button convert form from template-driven to reactive approach adding image control to store the image mime-type validator server-side uploading working with the file url adding upload functionality in angular fetching image on the frontend updating data with images pagination adding the pagination component working on the pagination backend connecting the angular paginator to the backend misc adding login input fields handling user input adding the signup form creating backend for login and signup creating user upon request connecting forms with backend spa authentication implement spa authentication sending token to the frontend adding middleware to protect routes adding token to authenticate request improving the ui header improving the ui messages connecting logout button and redirecting user route guards reflecting the expiration of token in ui saving the token in local storage authorization adding a reference to the model adding the user id to the posts protecting resources with authorization passing the user id to the frontend using the user id on the frontend handling errors error interceptor adding error dialog returning error messages on the server next → mean stack tutorial the mean stack tutorial is designed for the developers who want to design the dynamic website and web application using mean.js. our tutorial covers all the components of mean.js, such as mongodb, express.js, node.js, and angular.js. the mean.js can be considered a collection of various technologies for developing a dynamic website and web application. mean.js is used for developing a web application where mongodb is used as a database system, express.js is used as a back-end web framework, node.js is used as a web server, and angular.js is used as a front-end framework. what is mean? each letter in the word mean has some specific meaning. here, 'm' stands for mongodb, 'e' stands for express, 'a' stands for angular, and 'n' stands for node.js. it is one of the most popular stacks used for developing the full stack application. let's understand the basic idea behind the mean stack. as we can observe in the above figure that there is a front-end app, back-end app and database. the front-end app can be developed using either angular.js or react.js, and back-end can be developed using node.js, which is further connected to the mongodb database. the front-end app and back-end app communicate with each other through the restapi. the back-end app exposes the restapi endpoints, whereas the front-end app consumes the restapi endpoints. let's look at each component of mean.js one by one. node.js node.js is an open-source platform and provides a runtime environment for executing the javascript code. it is mainly used for building the back-end application. since there are two types of apps, such as web apps and mobile apps, where web apps run on the browser and mobile apps run on mobile devices. both web app and mobile app are the client apps to which the user interacts. these apps require to communicate with the backend services to store the data, send emails, push notifications. node.js is an ideal platform to build highly scalable, data-intensive, and real-time applications. it can be used for agile development and highly-scalable services. for example, paypal is a java and spring-based application using node.js. advantages of node.js the node.js applications are faster than the other framework-based applications and require fewer people to build the app. it requires fewer lines of code. the node app has a 35% faster response time than the other apps. the major advantage of using node.js is that node.js uses javascript. if you are a front-end developer, then you can easily transit from the front-end to the full stack developer. angular.js angular.js is a javascript framework that is used to develop web applications. this framework is developed by the google. now, the question arises that there are many javascript frameworks available in the market. why do we prefer angular.js over the other frameworks for developing the web application?. advantages of angular.js it is a two-way data binding which means that it keeps the model and view in sync. if any changes are made in the model, then automatically view will also be updated accordingly. the angular.js is designed with testing in mind. the components of angular.js application can be tested with both the testing, such as unit testing and end to end testing. with the help of angular.js, it is easy to develop the application in an mvc architecture. mongodb mongodb is the database used in web development. it is a nosql database, and a nosql database can be defined as a non-relational and document-oriented database management system. as it is a document-oriented database management system, so it stores the data in the form of documents. the sql databases use sql query language to query the database, whereas the mongodb is a nosql database that uses bson language to query the database. json is a text-based format, but it is inefficient in terms of speed and space. in order to make mongodb efficient in terms of space and speed, bson was invented. bson basically stores the json format in the binary form that optimizes the space, speed, and complexity. since the mongodb is an unstructured schema and the data is not related to each other then the question arises 'why do we need to use the mongodb?'. mongodb is mainly useful for projects which are huge. express.js express.js is a free and open-source software used as a back-end web application framework. it is commonly used in the popular development stacks like mean with a mongodb database. the express.js was developed by tj holowaychuk. advantages of express.js it is simple and lightweight software. it is not heavy to get installed in the machine and make the application running. it is easy to customize and configure as we can see it provides the flexibility that we require. it is a better choice for creating the api as when the application requires various apis to communicate with different people then the express.js is a good option advantages of meanstack simple and fast: meanstack is simple to use and fast as it allows the programmers to write the code in a single language for both the server and client-side. universal coding is possible in meanstack: in meanstack, the code written in one framework can be easily transferred to another framework. highly flexible: once the development process of an application is completed, it is easier to test the application on the cloud platform. cost-effective: since the mean stack uses single language, i.e., javascript so a smaller number of developers required to develop the app using mean stack. open source: all the technologies used in the mean stack are open-source and available for free. prerequisite mean.js is a framework for designing web applications. the user should have knowledge of web development using html, css, and javascript and should have basic knowledge of all the four technologies which are mongodb, express.js, angular.js, and node.js. audience this tutorial is helpful for both beginners and professionals who want to build a career in web-development or seamlessly learn the precepts of mean.js. there are a lot of topics and concepts available that will help you to learn mean.js easily. problem we assure you that you will not find any problem with this mean stack tutorial. but if there is any mistake, please post the problem in the contact form. next topicarchitecture of mean stack next → for videos join our youtube channel: join now feedback send your feedback to [email protected] help others, please share learn latest tutorials splunk spss swagger transact-sql tumblr reactjs regex reinforcement learning r programming rxjs react native python design patterns python pillow python turtle keras preparation aptitude reasoning verbal ability interview questions company questions trending technologies artificial intelligence aws selenium cloud computing hadoop reactjs data science angular 7 blockchain git machine learning devops b.tech / mca dbms data structures daa operating system computer network compiler design computer organization discrete mathematics ethical hacking computer graphics software engineering web technology cyber security automata c programming c++ java .net python programs control system data mining data warehouse javatpoint services javatpoint offers too many high quality services. mail us on [email protected], to get more information about given services. website designing website development java development php development wordpress graphic designing logo digital marketing on page and off page seo ppc content development corporate training classroom and online training data entry training for college campus javatpoint offers college campus training on core java, advance java, .net, android, hadoop, php, web technology and python. please mail your requirement at [email protected] duration: 1 week to 2 week like/subscribe us for latest updates or newsletter learn tutorialslearn javalearn data structureslearn c programminglearn c++ tutoriallearn c# tutoriallearn php tutoriallearn html tutoriallearn javascript tutoriallearn jquery tutoriallearn spring tutorial our websitesjavatpoint.comhindi100.comlyricsia.comquoteperson.comjobandplacement.com our services website development android development website designing digital marketing summer training industrial training college campus training contact address: g-13, 2nd floor, sec-3 noida, up, 201301, india contact no: 0120-4256464, 9990449935contact us subscribe us privacy policysitemap about me © copyright 2011-2021 www.javatpoint.com. all rights reserved. developed by javatpoint.
