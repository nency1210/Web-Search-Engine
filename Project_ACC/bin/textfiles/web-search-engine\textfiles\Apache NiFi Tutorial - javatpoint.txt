https://www.javatpoint.com/apache-nifi::apache nifi tutorial - javatpoint â‡§ scroll to top home java nifi etl testing compiler coa computer network html selenium servlet jsp jquery projects interview q forum nifi tutorial apache nifi apache nifi tutorial apache nifi tutorial provides basic and advanced concepts of the apache nifi. our tutorial is basically designed for beginners as well as professionals who want to learn the basics and programming concepts of apache nifi. this tutorial contains several sections, some of which may not be useful for some readers because some information is for first time users. the guide we are giving in this tutorial is intended to provide knowledge how to work with nifi. to work with nifi, you should have the basic knowledge of java, data ingestion, transformation, and etl. you should also be familiar with the regex pattern, web server, and platform configuration. in this tutorial, we are going to discuss the following topic: what is apache nifi? why apache nifi? history of nifi features of apache nifi advantages of apache nifi disadvantages of apache nifi apache nifi architecture key concepts of apache nifi prerequisites of apache nifi installation of apache nifi user interface of apache nifi components of apache nifi how to build a flow? what is apache nifi? apache nifi is an open-source data ingestion platform. it is a powerful and reliable system used for processing and distributing data between different systems. apache nifi helps to manage and automate the flow of data between the systems. nifi originally stands for niagara files (nifi) that was developed by nsa but is now maintained by apache foundation for further updates. it provides web-based user interface (ui), which uses https protocol to run nifi on a web browser that makes user interaction secure with nifi. note that the latest version of apache nifi is 1.11.4 that is released on march 2020. it is a web-based ui platform where we need to define the source, processor, and destination for the collection of data, transmission of data, and data storage, respectively. each processor in nifi has some relationships (such as success, failed, retry, or invalid data, etc.), which are used while connecting one processor to another. why apache nifi? apache nifi helps to manage and automate the flow of data between the systems. it can easily manage the data transfer between source and destination systems. it can be described as data logistics. apache nifi helps to move and track data similar to the parcel services as how data move and track. it provides web-based user interface (ui) to manage data in real-time. as we have already discussed that apache nifi is an open-source, therefore it is freely available. it supports various data formats (such as logs, social feeds, and geographical location data, etc.) and protocols (such as kafka, sftp, and hdfs, etc.). \supports of a wide variety of protocols make this platform more popular in it industry. below are some reasons given that why use apache nifi: nifi allows you to pull the data from various sources into nifi and create flow files. it allows you to use the existing libraries and java ecosystem functionality. it guarantees that the data must be delivered to the destination. nifi helps to fetch, aggregate, split, transform, listen, route, and drag & drop dataflow. it visualizes the dataflow at an enterprise level. nifi can easily install on aws (amazon web service). it allows us to start and stop components individually as well as group level. history of nifi nifi originally named niagara file, which is now known as apache nifi. it was developed by national security agency (nsa) which is now handed over to the apache software foundation. the changes that made in the history of apache nifi is given below year-wise:- year description 2006 niagara files (nifi) was developed by the nsa (united state national security agency) in 2006 for over eight years. 2014 in november 2014, nsa released it as open-source software and donated to apache software foundation (asf). 2015 in july 2015, it reached to asf top-level project status and became an official part of apache project suite. till now every 6-8 months since then, apache releases a new update of apache nifi. features of apache nifi apache nifi supports the directed graph of data routing, system mediation, and transformation. there are some reasons why nifi came up is because of the data challenges we have. nifi has a list of data challenges that are the features of nifi. so, the various features of nifi are described below: 1. web-based ui - nifi offers web-based user interface (ui) that can run over https, which makes user interaction secure with nifi. it also manages the data in real-time. nifi provides experience with design, control, monitoring, and feedback. 2. guaranteed delivery - it is one of the most important and very powerful features of apache nifi that the delivery of data is guaranteed to be done. it can be achieved by the effective use of persistent write-ahead log and content repository. they both are designed together in such a way that allows for high transaction rate, copy-on-write, effective load spreading. nifi is highly configurable. 3. data provenance or data lineage - nifi provides a data provenance module for tracking and monitoring data flows from beginning to end. nifi automatically records, indexes, and makes available the provenance data as objects flow through the system. for supporting compliance, optimization, troubleshooting, and many other scenarios, this information becomes very useful. 4. extensible - this feature allows you to create your own processor. it enables fast development and effective testing. nifi supports secure protocols such as ssh, ssl, https, encrypted content and also provides multi-tenant authorization as well as internal policy management. in nifi, the number of different connectors is increasing. the user can build their custom processor according to the requirement. this feature of nifi offers rapid development and effective testing. 5. visual command and control - dataflows can be quite complex. nifi has an interactive user interface for the user, capable of visualizing and expressing the dataflows. it allows the visual formation of dataflows and helps to express them visually to reduce the complexity of dataflow. nifi not only enables the visual formation of dataflows but is performed in real-time. if you make any change in data flow or modify it, that change is immediately reflected. you don't need to stop the entire flow to make any specific modification. 6. security - apache nifi offers system to system, user to system, and multi-tenant authorization security feature. nifi uses secure protocols such as ssl, ssh, and https for security reasons. it also uses other encryption to make data secure. advantages of apache nifi apache nifi supports sftp protocol using which it enables the data fetching from remote machines. apache nifi offers web-based user interface (ui). so that nifi can run on a web browser using localhost and port. on a web browser, it uses https protocol that makes user interaction with nifi secure. it also provides security policies at user level, process group level as well as other modules. nifi supports all the devices that run java. a user can create custom plugins to support different types of data systems, although nifi already supports around 188 processors. it provides real-time control that eases the movement of data between source and destination. disadvantages of apache nifi in case of primary node switching, apache nifi has a state persistence issue. because of this issue, sometimes it does not enable the processor to fetch the data from the source. while making any change by a user node gets disconnected from the nifi cluster, and then flow.xml becomes invalid. a node cannot reconnect to the cluster until the administrator manually copies the xml file from the connected node. all data are not created similarly. it offers ssl and topic level authorization, which may not be sufficient. to work with apache nifi, you must have good underlying system knowledge. architecture of apache nifi apache nifi has a processor, flow controller, and web server that executes on the jvm machine. additionally, it also includes three repositories, as shown in the figure, which are flowfile repository, content repository, and provenance repository. nifi runs within a jvm (java virtual machine) on a host operating system and every data or metadata store in repositories. the well-organized architecture of nifi is as follows: the key components of apache nifi architecture are discussed below in detail: web server the web server hosts the http-based commands and control api of nifi. flow controller the flow controller provides threads to execute the extensions. it also schedules the extensions when resources are received to execute. it works as a brain of operations. extension extensions are various type of plugin that allows apache nifi to interact with different systems. extensions help the process to complete the task. nifi has several types of extensions. these extensions are executed and operated within the java virtual machine (jvm). flowfile repository the flowfile repository contains the current state and attribute of each flowfile that passes through the data flows of nifi. nifi keeps track of the state in flowfile repository, which is currently active in the flow. the root directory is the default location of this repository, it can be changed. the default location of this repository can be changed by changing the property "nifi.flowfile.repository.directory". content repository the content repository stores all the data present in all the flowfiles. implementation of the content repository is pluggable same as the flowfile repository. its default approach is a simple mechanism to store block of data in file system. the default directory of content repository is in root directory of nifi and can be changed by changing the "org.apache.nifi.controller.repository.filesystemrepository" property. provenance repository the provenance repository is the repository that stores all the provenance event data. event data is indexed and searchable within each location. it allows the user to check information about flowfile, which means it tracks and stores all the events of all flowfiles that flows in the apache nifi. it also enables the troubleshooting if any issue occurs while processing flowfile provenance repository has divided into two types: volatile provenance repository - all provenance data is lost after restart in this repository. persistence provenance repository - the default directory of persistence provenance is in the root directory of apache nifi. it can be changed using the "apache.nifi.provenance.persistanceprovenancerepository" property. apache nifi can also work within a cluster. a zero-master clustering paradigm is employed with the beginning nifi 1.0 first version release. in nifi cluster, each node works on a different set of data, but it performs the same task on the data. apache zookeeper chooses a single node as the cluster coordinator and handles the failure automatically. each node of the cluster reports to the cluster coordinator about heartbeat and status. the cluster coordinator is responsible for connecting or disconnecting the nodes. in addition, each cluster again has a primary node, which is also selected by zookeeper. you can interact with nifi cluster as a data flow manager or end developer using the user interface (ui) of any node. any changes that are made by the user are replicated for all nodes of the cluster, which will allow several entry points. key concepts of apache nifi while discussing nifi architecture, the user must be familiar with the following key terms of apache nifi. so, we will discuss fundamental key concepts at a high level. they are related to the idea of flow-based programming (fbp). flow flow is created by connecting two or more different processors. it is used to transfer the data from one data source to another destination data source. this data can be modified if required. processor a processor is a java module used to either fetch data from the source system or to be stored in the destination system. there are many other processors available that can be used to add attribute or alter/change the content in the flowfile. processor is responsible for sending, receiving, creating, splitting, merging, transforming, routing, and processing flowfiles. connection connection is known as a bounded buffer in fbp terms. it is a link between processors that connects the processors. it acts as a queue that holds the data in queue when needed. it allows several processes to interact at different rates. process group a process group is a set of nifi flows. it helps the users to manage the flows and keep them in a hierarchical manner. basically, it is a set of processes and their connections, which can receive data through the input ports and send through the output ports. flowfile flowfile is the original data with which meta-information is associated. it represents each object that is moving through the system. the nifi processor changes to the flowfile while object moves from source to destination processor. basically, a flowfile is created by parts that are content and attributes. content is the user data and attributes are the key-value pairs that are attached with user data. data provenance it is a repository, which allows the user to check information about flowfile. it also enables the troubleshooting if any issue occurs while processing flowfile. prerequisites of apache nifi before using apache nifi, following things must be done on your system: download java on your system. set the java environment variable. along with these requirements, you should have the basic knowledge of java, data ingestion, transformation, and etl to work with apache nifi. users should also be familiar with the regex pattern, web server, and platform configuration. note that nifi is more compatible with java version 8 or 11. so, we suggest you to download the required version of java. install java and setup environment variable click here to download the java. agree with terms and conditions. run the downloaded exe file by double on it. to complete the installation process, continue with all default options and finish the installation process. it will take a bit of time to install. now, the next step is to setup the java environment variable - right-click on your computer (my pc) icon on the desktop and select properties, i.e., my pc -> properties. navigate to advanced system settings -> environment variables -> system variables. under the system variables section, click on new to create a new system variable. here, enter the variable name and variable value to set permanent path of java. provide variable name as java_home or anything else which you want. for variable value, go to the directory where java is installed and copy the path of jre folder and paste it in the variable value field. variable name: java_home variable value: c:\program files (x86)\java\jre1.8.0_251 click on ok -> ok -> ok and close all tabs. now, verify that java is installed and the environment variable is set up successfully. open the command prompt and type command javac on it and press enter key. if the output will display same as the screenshot below, java is installed successfully. now you can download and install apache nifi on your system. installation of apache nifi on windows in this tutorial, we will install the setup of apache nifi on windows operating system. for step by step installation of apache nifi, follow the steps given below: step 1: click on the following link http://nifi.apache.org/download.html and download the latest version of apache nifi. download the zip file of apache nifi for windows operating system, while for the linux operating system, download the tarball (tar.gz) mac users can also download tarball file for mac os or can install it via homebrew by running brew install nifi command on command line. step 2: under the binaries section, click on the zip file of nifi setup for windows os, as shown in the below screenshot. step 3: the above link will redirect you to a new page. here, click on the first link as shown in the screenshot below. we are downloading the latest version of nifi, i.e., 1.11.4. step 4: once the download is complete, extract the downloaded zip setup of apache nifi. to extract the zip file, right-click on the downloaded file and select extract here. step 5: the zip file will start extracting. note: remember that java must be installed on your system and environment variable have to be set as well. so, first make sure java is installed. if not, install it and set the java environment variable as well. step 6: now, go to the bin folder inside the extracted folder, i.e., nifi-1.11.4/bin. click on the run-nifi window batch file and run it to start nifi. step 7: the run-nifi.bat will run the command prompt, which will look like the below screenshot. this bat file must be executed before running nifi on a web browser. nifi has been started. now you can open it from any web browser like chrome, or internet explorer, etc. so, we need a port number to run the nifi ui on a web browser. step 8: therefore, go to the conf folder (nifi-1.11.4/conf) that has all the configuration files for nifi and open the nifi.properties file in notepad. scroll down and check the port number of nifi. the default port of apache nifi is 8080. if the default port number is already assigned to any other software program, change the port number such as 9090 and save the file. step 9: now, open the web browser and type http://localhost:8080 in your browser tab. here, we have used default port 8080 to run the nifi because port 8080 is free on our system. step 10: the dashboard of nifi will launch on the browser on successful installation. the dashboard screen of apache nifi is called canvas, where we place the components to create data flows. issues while running apache nifi on web browser nifi will run on the web browser successfully by following above installation steps. if not, then this can be done because of these reasons: java is not installed on your system. java environment variable is not set. port is not free or, you have not run the run-nifi file that exists inside the bin resolved the mentioned issues and retry again to run nifi. change port number if the nifi gives the error "this site can't be reached" on the web browser, it may be port is not free. so, follow the steps below to change the port number: step 1: go to the conf folder inside the extracted zip folder, i.e., nifi-1.11.4/bin. it contains all the configuration files for nifi. step 2: open the nifi.properties file with notepad or any other text editor tool and change the port number and save the file. nifi.web.http.port=9090 retry again and run the apache nifi on the web browser with a new port number. user interface of apache nifi once the nifi has been started successfully, ui will bring up to you to create and monitor the dataflows. nifi ui provides an interactive interface that can be accessed by the users on a web browser. users can drag and drop components in nifi. it provides various type of information about nifi such as: active threads running components stopped components disabled components invalid components total queued data stale versioned process groups up to date versioned process groups sync failure versioned process groups locally modified versioned process groups stale and locally modified versioned process groups transmitting remote process groups not transmitting remote process groups the below screenshot is user interface of apache nifi: components of apache nifi there are following components of apache nifi, which are listed under the component section of the toolbar - processor processors are basic blocks that are used for creating a data flow. apache nifi has several processors, where each processor has different functionality. users can drag and drop the processor icon on the canvas to add the processor and then select the desired processor to create the dataflow. drag the process icon on the canvas that will open an add processor window. choose the desired processor you needed for the data flow in apache nifi. to know more about the processor, right-click on it and go to usage. this will bring up the documentation of the processor. it provides information like what a processor does, properties that need to be configured, and the relationship for the processor. input port an input port is used for getting data from the processor, which is not present in that process group. the input port can be dragged on the canvas by clicking on the icon given below. to add an input port to any data flow, drag the icon on canvas. after dragging the icon onto the canvas, nifi asks you to enter the name for the input port. provide the name of the input port and click on the add button. output port an output port is used for transferring data to the processor, which is not present in that process group. the output port can be dragged on the canvas by clicking on the icon given below. to add the output port to any data flow, drag the icon on canvas. after dragging this icon onto the canvas, nifi pops up a screen to enter the name for the output port. provide the name of the output port and click on the add button. process group the below icon is used to add the process group in nifi canvas. after dragging this icon to the canvas, nifi pops up a screen where enter the name of the process group and then add it to the nifi canvas by clicking the add button. remote process group the below icon is used to add the process group in nifi canvas. template templates are used to reuse the data flow in same or different nifi instances. the icon that is given below is used to add the template onto the nifi canvas. after dragging the template icon, the user can choose the template already added in nifi. funnel funnel helps to transfer the output of a processor to several other processors. with the help of below icon, a user can add the funnel to a data flow. label labels are used to add the text about any components that exist in nifi. it also provides various color options. the developers can change label color as well as size of the text. they can use these colors to add an aesthetic sense. in the top menu of nifi ui, first leftmost icon is used to add label in nifi canvas. how to build a flow? in this example, we are going to build a simple two processor flow. first of all, we will add two processors on canvas window and configure each of them. after configuring both the processor, we will connect and run them. add and configure processors step 1: to add a processor on the canvas, go to the component section in the toolbar and drag a processor component. this will open a add processor window, where you go through the list of processors. step 2: find the required processor or click on its tag under the tag cloud to reduce the list of processors by category and functionality that you are looking for a processor. step 3: click on the processor that you want to select and add it to the canvas by clicking on the add button. similarly, drag the processor icon again, type the name of the processor you want and double-click to add it to the canvas. step 4: if you already know the processor name that you want, you can simply type the name of the processor up here in the filter bar. after that, double-click on the processor to add it to the canvas. by using the above steps, add two processors on the canvas. step 5: but you will see that both processors are invalid because they have a warning symbol in the upper left corner of the processor base. hover the mouse over the warning icon, it will show the minimum requirements need to be configured to make processors valid and able to run. note: to know more about the processor, right-click on it and go to usage option. it will show you the documentation for the processor. step 6: to configure the processor, simply right click on the respective processor and go to configure. a window of configure processor with default values will pop up to you. this will bring up a new window containing four tabs, i.e., setting, scheduling, properties, and comment. configure generateflowfile processor setting go to the setting tab and change the name of the processor in name field, because by default its name is the processor type. each processor has a unique id number, which is not configurable. this processor only has success relationship. so, leave the automatically terminate relationship unchecked because we want to continue to the next processor in the flow. scheduling the scheduling tab defines how to run, how often to run, and how long to run. set the run schedule to 1 sec because this processor can produce test files very fast. leave all other fields as default for now. properties properties tab is the main tab where you configure the information that the processor needs to run properly, where properties that are not in bold letters are optional. double click on the file size row to change the size of the file. here change the file size from 0b to 1kb and click on the ok button. comment in the comment tab, type any comments like why you configured the processor or the way you did. step 7: now, click on the apply button to save all the changes are made and complete the configuration of generateflowfile processor. configure logattribute processor similar to the generateflowfile processor, right-click on it and go to configure, where we will change a couple of things that we didn't in flowfile processor. here you will also get a new window containing four tabs, i.e., setting, scheduling, properties, and comment. step 8: go to the setting tab and change the buttetin level drop-down list to info in place of warn. step 9: mark the success checkbox under the automatically terminate relationships on the right side of window. step 10: leave other sections of all tabs with default settings and click on the apply button to complete the configuration of the generateflowfile processor. after completing the above steps, you can see that both the processors are still invalid. this is because we have not connected them. so, we will now connect both processors and run. connect and run processors step 1: to connect the processors to each other, hover the mouse over the center of the processor, an aero in a circle will show. drag the mouse from that circle to another processor until it highlighted in green. step 2: release the mouse here. a create connection window will open containing details and setting tab. leave the current settings as default for now and click on the add button. the details tab shows what the connection is going from and to. it also shows the list of relationships that will be included in the connection. step 3: now, you can see that both the processors are valid now as they have a stop symbol in place of warning symbol at the upper left-hand corner. step 4: to run both processors, select both the processors by pressing the shift key and click on the start button present under the operate section. step 5: here, the processors have been started running now after connecting successfully. you can see that no information is sent or received by any processor yet. step 6: click anywhere on the canvas and select refresh to see that what the processors are actually doing by the information. step 7: you can see that the log attribute is producing bulletins. i had configured it to produce bulletins at info level. this information represents what happened in the processors over the last five minutes. step 8: here, you can see that 274kb data is out from the generateflowfile processor and 273kb is received by logattribute processor, where 1kb data is queued. the generateflowfile processor is sending information, which is received by logattribute processor. let's compare both processors, notice that no data is coming into the generateflowfile processor because it does not have any incoming connection. so, it generates data itself. step 9: now, let's stop the logattribute processor for a few seconds by selecting the processor and click on stop. you will see that the data has been queued up in the connection that is feeding it if we refresh the state, as we have also done earlier. step 10: now right-click on log attribute processor and choose start to restart the processor so that the queue data will clear out. now, it will run accurately. for videos join our youtube channel: join now feedback send your feedback to [email protected] help others, please share learn latest tutorials splunk spss swagger transact-sql tumblr reactjs regex reinforcement learning r programming rxjs react native python design patterns python pillow python turtle keras preparation aptitude reasoning verbal ability interview questions company questions trending technologies artificial intelligence aws selenium cloud computing hadoop reactjs data science angular 7 blockchain git machine learning devops b.tech / mca dbms data structures daa operating system computer network compiler design computer organization discrete mathematics ethical hacking computer graphics software engineering web technology cyber security automata c programming c++ java .net python programs control system data mining data warehouse javatpoint services javatpoint offers too many high quality services. mail us on [email protected], to get more information about given services. website designing website development java development php development wordpress graphic designing logo digital marketing on page and off page seo ppc content development corporate training classroom and online training data entry training for college campus javatpoint offers college campus training on core java, advance java, .net, android, hadoop, php, web technology and python. please mail your requirement at [email protected] duration: 1 week to 2 week like/subscribe us for latest updates or newsletter learn tutorialslearn javalearn data structureslearn c programminglearn c++ tutoriallearn c# tutoriallearn php tutoriallearn html tutoriallearn javascript tutoriallearn jquery tutoriallearn spring tutorial our websitesjavatpoint.comhindi100.comlyricsia.comquoteperson.comjobandplacement.com our services website development android development website designing digital marketing summer training industrial training college campus training contact address: g-13, 2nd floor, sec-3 noida, up, 201301, india contact no: 0120-4256464, 9990449935contact us subscribe us privacy policysitemap about me Â© copyright 2011-2021 www.javatpoint.com. all rights reserved. developed by javatpoint.
